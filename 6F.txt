#assi 6.1 Forward propagation

import numpy as np

def sigmoid(x):
  return 1/(1+np.exp(-x))

input_size = 3
hidden_size = 4
output_size = 2

w1 = np.random.randn(input_size,hidden_size).round()
b1 = np.random.randn(hidden_size).round()
w2 = np.random.randn(hidden_size,output_size).round()
b2 = np.random.randn(output_size).round()

x = np.array([[0.2,0.5,0.1]])

hidden_layer = sigmoid(np.dot(x,w1) + b1).round()
output_layer = sigmoid(np.dot(hidden_layer, w2) + b2).round()

print("weight 1 : ",w1)
print("weight 2 : ",w2)
print("bias 1 : ",b1)
print("bias 2 : ",b2)
print(output_layer)
